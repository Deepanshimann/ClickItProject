<%- include('./partials/header'); %>
<%- include('./nav.ejs'); %>

<!-- Add this CSS or adjust the existing styles in your .ejs file -->
<style>
    #payment-element {
        margin-top: 20px;
        margin-bottom: 30px; /* Add space between the card element and the footer */
    }

    .StripeElement {
        background-color: white;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 4px;
        width: 100%;  /* Make sure the Stripe element spans the full width */
    }

    /* Adjust the footer if necessary to prevent overlapping */
    .footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: #fff;
        padding: 20px;
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
        z-index: 100;
    }

    /* Ensure that the page content above the footer has enough padding */
    body {
        padding-bottom: 120px;
    }
      /* Responsive design: Adjust for mobile screens */
  @media (max-width: 600px) {
    .grid {
      grid-template-columns: repeat(2, 1fr); /* 2 columns for mobile */
    }
    .product-card img {
        height: 7.5rem;
        width: auto;
    }
  }
</style>


    <body class="bg-gray-100 font-sans">
        <div class="max-w-screen-md mx-auto pt-28 p-4">
            <!-- Header -->
            <div class=" flex justify-between items-center py-4">
                <button id="back-btn" class="text-lg"><i class="ri-arrow-left-s-line" ></i>Back</button>
                <h1 class="text-xl font-semibold">Checkout</h1>
                <button class="text-lg">Share</button>
            </div>

            <!-- Delivery Info -->
            <div class="bg-white p-4 rounded-lg shadow mb-4">
                <div class="flex items-center gap-4">
                    <i
                        class="w-10 h-10 flex items-center justify-center rounded bg-zinc-100 text-2xl ri-timer-line"></i>
                    <div>
                        <p class="text-sm font-medium">Delivery in <%= Math.floor((Math.random()*10)+3) %> minutes</p>
                        <p class="text-xs text-gray-500">Shipment of 1 item</p>
                    </div>
                </div>
                <% cart.forEach(elem=> { %>
                    <div  class=" flex items-center mt-4">
                        <% if (elem.image) { %>
                        <img src="data:image/jpg;base64, <%= elem.image.toString('base64') %>" alt="<%= elem.name %>"
                         class="w-16 h-16 rounded object-contain">
                         <% } else { %>
                            <p>No image available</p>
                        <% } %>
                        <div class="ml-4">
                            <p>
                                <%= elem.name %>
                            </p>
                            <p class="text-xs text-gray-500">170 g</p>
                        </div>
                        <div class="ml-auto">
                            <div class="flex items-center justify-center bg-green-700 text-white rounded-md">
                                <a href="/cart/remove/<%= elem._id %>" class="px-2 py-1 rounded"><i
                                        class="ri-subtract-line"></i></a>
                                <p class="mx-2">
                                    <%= elem.quantity %>
                                </p>
                                <button class="px-2 py-1 rounded"><i class="ri-add-line"></i></button>
                            </div>
                            <div class="flex gap-2 mt-4">
                                <p class="text-gray-500 line-through">&pound;<%= Number(elem.price)*Number(elem.quantity).toFixed(2)+2
                                        %>
                                </p>
                                <p>&pound;<%= Number(elem.price)*Number(elem.quantity)%>
                                </p>
                            </div>
                        </div>
                    </div>
                    <% })%>
                                   <!-- Cart Items Placeholder -->
        <div id="cart-items" class="cart-items-container">
            <!-- Dynamically added cart items will appear here -->
        </div>
            </div>

            <!-- Before You Checkout -->
            <h1 class="text-2xl font-semibold mb-6 mt-16">Before Checkout </h1>
            <div class="grid grid-cols-4 gap-4 mb-6">
            
                <% rnproducts.forEach(function(elem){ %>
                   
                    <div class="flex w-32 flex-shrink-0 flex-col items-center  ">
                       
                        <div class="relative">
                            <img src="data:image/jpg;base64, <%= elem.image.toString('base64') %>"
                                alt="<%= elem.name %>" class="h-24 rounded">
                        </div>
                        <p class="text-sm text-center mt-2 h-12 overflow-hidden">
                            <%= elem.name %>
                        </p>
                        <p class="text-xs text-gray-500 line-through">&pound;<%= Number(elem.price)+2 %>
                        </p>
                        <p class="font-bold">&pound;<%= elem.price %>
                        </p>
                        <a class="px-4 text-white text-sm rounded mt-2 cursor-pointer inline-block py-1 bg-green-700 add-to-cart-link"
                        data-product-id="<%= elem._id %>">ADD</a>
                    </div>
                    <%}) %>
            </div>
            <h2 class="mb-16 text-xl ml-2"><i class="ri-restart-line"></i> Refresh the page if you have added anything.... </h2>

            <!-- Bill Details -->
            <div class="bg-white p-4 rounded-lg shadow mb-4">
                <h2 class="text-lg font-semibold">Bill details</h2>
                <div class="mt-2">
                    <% if (cart.length > 0) { %>
                    <div class="flex justify-between">
                        <p class="text-sm">Items total</p>
                        <p class="text-sm">&pound;<%= (finalprice - 5).toFixed(2) %>
                        </p>
                    </div>
                    <div class="flex justify-between">
                        <p class="text-sm">Delivery charge</p>
                        <p class="text-sm">&pound;4.00</p>
                    </div>
                    <div class="flex justify-between">
                        <p class="text-sm">Handling charge</p>
                        <p class="text-sm">&pound;1.00</p>
                    </div>
                    <div class="flex justify-between font-bold mt-2">
                        <p class="text-lg">Grand total</p>
                        <p class="text-lg">&pound;<%= finalprice %>
                        </p>
                    </div>
                    <% } else { %>
                        <p class="text-center text-gray-500">Your cart is empty</p>
                      <% } %>
                </div>
            </div>

            <!-- Donation -->
            <div class="bg-white p-4 rounded-lg shadow mb-4">
                <div class="flex items-center">
                    <img src="https://b.zmtcdn.com/data/fi_assets/9fbf0569f69bfef7d190c5b892ab0a521619355737.png"
                        alt="Feeding India" class="w-12 h-12 rounded">
                    <div class="ml-4">
                        <p class="font-semibold">Feeding India donation</p>
                        <p class="text-sm opacity-50">Working towards a malnutrition free India. Feeding India...<span
                                class="text-blue-500">read more</span></p>
                    </div>
                    <p class="ml-auto text-sm font-bold">â‚¹1</p>
                </div>
            </div>

            <!-- Delivery Instructions -->
            <div class="bg-white p-4 rounded-lg shadow">
                <h2 class="text-lg font-semibold">Delivery instructions</h2>
                <div class="flex space-x-4 mt-4">
                    <button class="flex-1 flex flex-col items-center justify-center py-2 bg-gray-100 rounded">
                        <i class="ri-mic-line"></i>
                        <p class="text-sm">Record</p>
                    </button>
                    <button class="flex-1 flex flex-col items-center justify-center py-2 bg-gray-100 rounded">
                        <i class="ri-prohibited-line"></i>
                        <p class="leading-none text-sm">Avoid calling</p>
                    </button>
                    <button class="flex-1 flex flex-col items-center justify-center py-2 bg-gray-100 rounded">
                        <i class="ri-notification-off-line"></i>
                        <p class="text-sm">Don't ring the bell</p>
                    </button>
                    <button class="flex-1 flex flex-col items-center justify-center py-2 bg-gray-100 rounded">
                        <i class="ri-door-open-line"></i>
                        <p class="text-sm">Leave at door</p>
                    </button>
                </div>
            </div>

            <!-- Cancellation Policy -->
            <div class="bg-white p-4 rounded-lg shadow mb-8 mt-10">
                <p class="text-sm">
                    Orders cannot be cancelled once packed for delivery. In case of unexpected delays, a refund will be
                    provided, if applicable.
                </p>
            </div>



<!-- Footer with the Place Order Button -->
<div class="footer">
    <div class="flex justify-between items-center">
        <div>
            <p class="text-sm">Add Address? Click on Map!</p>
    <a href="/map">
        <p class="text-lg font-bold text-green-600 cursor-pointer">Map</p>
    </a>
        </div>
        <div>
            <p class="text-lg font-bold">&pound; <%= finalprice %></p>
            <button id="submit" class="paybtn bg-green-700 text-white px-4 py-2 rounded">Place Order</button>
        </div>
    </div>
</div>

    <!-- Notification div -->
   <div id="cart-notification" style="display: none;" class="fixed bottom-4 text-2xl font-bold left-1/2 transform -translate-x-1/2  bg-yellow-500 text-white p-4 rounded">
                Item added to the cart!  <i class="ri-shopping-basket-line"></i>
            </div>
            

<!-- Payment div -->
      <div class="flex flex-col max-w-screen-md justify-center items-center ">
        <h1 class="text-2xl font-bold">Add Payement Details And Pay! </h1>
        <p class="p-4">This application is currently in test mode. Please use the card number 3742 4500 1741 007 or search for other test card details compatible with UK Stripe Test Mode.</p>
             <div id="payment-element" ></div>
    </div>
        </div>




       <!-- Stripe.js -->
    <script src="https://js.stripe.com/v3/"></script> 
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
            integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        
            <script>
                const stripe = Stripe('pk_test_51PpJQtRsZlg6HjHGVcJF5RxjsPr4D3FVcPWyjagzqOI4EdMYBsty1Gt9YQo8o1z2JDIPFMbwBHYO1yoDNhHOSP0E00VnU7yCqS');
                
                let elements;
            
                // Create an instance of the elements
                elements = stripe.elements();
                const style = {
                    base: {
                        color: "#32325d",
                        fontFamily: 'Arial, sans-serif',
                        fontSmoothing: "antialiased",
                        fontSize: "16px",
                        "::placeholder": {
                            color: "#32325d"
                        }
                    },
                    invalid: {
                        color: "#fa755a",
                        iconColor: "#fa755a"
                    }
                };
            
                // Create an instance of the card Element
                const card = elements.create('card', {style: style});
                card.mount('#payment-element');  // Mount the card element to the div
            
                // Handle form submission for payment
                document.querySelector('#submit').addEventListener('click', function (e) {
                    e.preventDefault();
                     // Step 1: Create Payment Intent
                    axios.post('/payment/create-payment-intent', {
                        amount: <%= finalprice %> * 100, // Convert to cents for Stripe
                    }).then(function (response) {
                        const clientSecret = response.data.clientSecret;

             // Step 2: Confirm Payment using Stripe
                        stripe.confirmCardPayment(clientSecret, {
                            payment_method: {
                                card: card,
                                billing_details: {
                                    name: 'Customer Name',
                                    email: 'customer@example.com',
                                },
                            }
                        }).then(function (result) {
                            if (result.error) {
                                // Show error to your customer
                                alert(result.error.message);
                            } else {
                                if (result.paymentIntent.status === 'succeeded') {
                                  // Step 3: After successful payment, create the order and redirect
                                  
                                    // The payment is complete!
                                    window.location.href = `/order/success/${result.paymentIntent.id}`;
                                }
                            }
                        });
                    }).catch(function (error) {
                        console.error('Error creating payment intent:', error);
                    });
                });
            </script>


        <script>
            document.getElementById("back-btn").addEventListener("click",function(){
                window.location.href = '/products/';
            })
        </script>

<script>
    document.querySelectorAll('.add-to-cart-link').forEach(link => {
        link.addEventListener('click', function (event) {
            event.preventDefault();  // Prevent the default anchor behavior (navigation)
            
            const productId = this.getAttribute('data-product-id');  // Get product ID from data attribute

            // Send an AJAX request to add the item to the cart
            axios.get(`/cart/add/${productId}`)
                .then(response => {
                    // Show the notification div
                    document.getElementById('cart-notification').style.display = 'block';

                    // Hide the notification after 2 seconds
                    setTimeout(() => {
                        document.getElementById('cart-notification').style.display = 'none';
                    }, 2000);
        
 // Update the cart count
 if (response.data.cartCount) {
                    document.getElementById('cart-count').textContent = `${response.data.cartCount} Items in your Cart`;
                }

 // Dynamically update the cart UI with the newly added product
 const product = response.data.product;
                const cartDiv = document.getElementById('cart-items'); // Assuming you have a cart div with id="cart-items"
                
 // Append the new product to the cart div
                const newProductHTML = `
                    <div class="cart-item flex items-center mt-4">
                        <img src="data:image/jpg;base64, ${product.image}" alt="${product.name}" class="w-16 h-16 rounded">
                        <div class="ml-4">
                            <p>${product.name}</p>
                            <p class="text-xs text-gray-500">1 unit</p> <!-- Assuming quantity is 1 -->
                        </div>
                        <div class="ml-auto">
                            <p>&pound;${product.price}</p>
                        </div>
                    </div>
                `;
                cartDiv.insertAdjacentHTML('beforeend', newProductHTML);
                })
                .catch(error => {
                    console.error('Error adding item to cart:', error);
                });
        });
    });
</script>


    </body>

    <%- include('./partials/footer'); %>