<%- include('./partials/header'); %>
<%- include('./nav.ejs'); %>

<style>
   
    /* Styling for products */
    .product-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1.25rem;
    }

    .product-card img {
        height: 7.5rem;
        width: auto;
    }

    .product-card .product-name {
        margin-top: 0.75rem;
        font-size: 0.875rem;
        font-weight: bold;
        text-align: center;
        height: 1.25rem;
        overflow: hidden;
    }

    .product-card .price-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 0.75rem;
    }

    .product-card .price-section p {
        margin: 2px 0;
    }

    .product-card .line-through {
        text-decoration: line-through;
        color: #888;
    }

    .product-card .add-to-cart-btn {
        background-color: #15803D;
        color: white;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 12px;
    }

  /* Media query for tablets and smaller screens */
  @media (max-width: 1031px) {
        .grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    /* Media query for mobile screens */
    @media (max-width: 600px) {
        .grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .product-card {
            padding: 0.75rem;
        }

        .product-card img {
            height: 6.4rem; 
        }

        .product-card .product-name {
            font-size: 1rem; 
        }

        .product-card .add-to-cart-btn {
            padding: 4px 8px; 
        }
        .cart-notification{
            font-size: 1rem;
        }
    }

    @media (max-width: 600px) {
        .cart-footer {
            padding: 8px;
        }

        .cart-footer .cart-count {
            font-size: 1rem;
        }

        .cart-footer .next-button {
            padding: 8px 16px;
        }
    }
      /* Media query for very small screens */
      @media (max-width: 360px) {
        .grid {
            grid-template-columns: 1fr; 
        }
    }
</style>

<body class="bg-gray-100 font-sans pt-28">
    <div class="max-w-full mx-auto p-4">
        <!-- Order Now Section -->
        <div class="bg-white p-4 rounded-lg shadow mb-6">
            <div class="flex justify-between items-center">
                <h2 class="text-lg font-semibold">Order Now</h2>
            </div>
            <div class="grid grid-cols-5 gap-4 mt-4">
                <% rnproducts.forEach(function(elem){ %>
                <div class="product-card">
                    <div class="relative">
                        <img src="data:image/jpg;base64, <%= elem.image.toString('base64') %>"
                             alt="<%= elem.name %>" class="h-24 rounded">
                    </div>
                    <p class="product-name">
                        <%= elem.name %>
                    </p>
                    <div class="price-section">
                        <p class="line-through">&pound;<%= (Number(elem.price) + 2).toFixed(2) %></p>
                        <p class="font-bold">&pound;<%= elem.price %></p>
                    </div>
                    <a class="add-to-cart-btn add-to-cart-link" data-product-id="<%= elem._id %>">
                        ADD
                    </a>
                </div>
                <% }) %>
            </div>
        </div>

       

        <!-- Grocery & Kitchen Section -->
        <% for (let key in products) { %>
        <div class="bg-white p-4 rounded-lg shadow mb-10">
            <h2 class="text-lg font-semibold"><%= key %></h2>
            <div class="grid grid-cols-5 gap-4 mt-4">
                <% products[key].forEach(function(elem) { %>
                <div class="product-card">
                    <img src="data:image/jpg;base64, <%= elem.image.toString('base64') %>" alt="<%= elem.name %>" class="w-28 rounded h-28 object-contain mb-2">
                    <p class="product-name">
                        <%= elem.name %>
                    </p>
                    <div class="price-section">
                        <p class="line-through">&pound;<%= (Number(elem.price) + 2).toFixed(2) %></p>
                        <p class="font-bold">&pound;<%= elem.price %></p>
                    </div>
                    <a class="add-to-cart-btn add-to-cart-link" data-product-id="<%= elem._id %>">
                        ADD
                    </a>
                </div>
                <% }) %>
            </div>
        </div>
        <% } %>

        <!-- Cart Footer for consistency -->
        <% if (userLoggedIn) { %>
        <div class="cart-footer bg-yellow-100 px-8  rounded-lg shadow fixed bottom-0 inset-x-0">
          <div class="flex justify-between items-center mt-2">
            <div id="cart-count" class="text-xl font-bold">
            Check Your Cart
            </div>
            <a href="/cart" class="next-btn flex items-center justify-center px-20 py-3 bg-green-700 text-white rounded-lg">
              <span class="text-lg">Next</span><i class="text-2xl ri-arrow-right-s-fill"></i></a>
          </div>
        </div>
        <% } %>

        <!-- Cart notification (hidden by default) -->
        <div id="cart-notification" style="display: none;" class="fixed bottom-4 text-2xl font-bold left-1/2 transform -translate-x-1/2 bg-yellow-500 text-white p-4 z-1000 rounded">
            Item added to the cart! <i class="ri-shopping-basket-line"></i>
        </div>

    </div>


    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
       

        // Save scroll position
        window.addEventListener('scroll', function() {
            localStorage.setItem('scrollPosition', window.scrollY);
        });

        // Restore scroll position
        window.addEventListener('load', function() {
            const scrollPosition = localStorage.getItem('scrollPosition');
            if (scrollPosition) {
                window.scrollTo(0, scrollPosition);
            }
        });

        // Add to cart functionality
        document.querySelectorAll('.add-to-cart-link').forEach(link => {
            link.addEventListener('click', function(event) {
                event.preventDefault();
                const productId = this.getAttribute('data-product-id');

                // Send an AJAX request to add the item to the cart
                axios.get(`/cart/add/${productId}`)
                    .then(response => {
                        // Show the notification div
                        const notification = document.getElementById('cart-notification');
                        if (notification) {
                            notification.style.display = 'block';
                            // Hide the notification after 2 seconds
                            setTimeout(() => {
                                notification.style.display = 'none';
                            }, 2000);
                        }

                        // Update the cart count (only if the cart-count element exists)
                        const cartCountElement = document.getElementById('cart-count');
                        if (cartCountElement && response.data.cartCount) {
                            cartCountElement.textContent = `${response.data.cartCount} Items in your Cart`;
                        } else {
                            console.error('Cart count element not found or no cart count provided');
                        }
                    })
                    .catch(error => {
                        console.error('Error adding item to cart:', error);
                    });
            });
        });
    </script>

<%- include('./partials/footer'); %>
